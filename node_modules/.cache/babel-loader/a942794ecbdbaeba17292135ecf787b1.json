{"ast":null,"code":"var _jsxFileName = \"/Users/shambhavigupta/Desktop/filter-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport getData from './Api';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [productDetails, setProductDetails] = useState([]);\n  const [filter, setFilter] = useState({\n    category: [],\n    brand: [],\n    gender: []\n  });\n  const [filteredData, setFilteredData] = useState([]);\n  const [count, setCount] = useState(0);\n  const [loader, setLoader] = useState(false);\n  const [failed, setFailed] = useState(false);\n\n  const getProductDetails = () => {\n    setLoader(true);\n    getData().then(res => {\n      if (res.status === 200) {\n        setProductDetails(res.data.products);\n        setCount(res.data.totalCount);\n        setLoader(false);\n        setFailed(false);\n      } else {\n        setLoader(false);\n        setFailed(true);\n      }\n    }).catch(err => {\n      setLoader(false);\n      setFailed(true);\n    });\n  };\n\n  const getFilters = () => {\n    let category = new Set();\n    let gender = new Set();\n    let brand = new Set();\n    productDetails.forEach(item => {\n      category.add(item.category);\n      gender.add(item.gender);\n      brand.add(item.brand);\n    });\n    setFilter({\n      category: Array.from(category),\n      gender: Array.from(gender),\n      brand: Array.from(brand)\n    });\n  };\n\n  useEffect(getProductDetails, []);\n  useEffect(getFilters, [productDetails]);\n\n  const filterData = (filter, type) => {\n    setFilteredData(productDetails.filter(item => item[type] === filter));\n  };\n\n  console.log(filteredData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), filter.category && filter.category.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => filterData(item, 'category'),\n      children: item\n    }, `catergory${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), filter.gender && filter.gender.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => filterData(item, 'gender'),\n      children: item\n    }, `gender${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Brand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), filter.brand && filter.brand.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => filterData(item, 'brand'),\n      children: item\n    }, `brand${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.product\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.brand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, `${item.brand}${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"FUeQX2ZTE8AO8w+OADL6Z8ZO6uw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shambhavigupta/Desktop/filter-app/src/App.js"],"names":["useEffect","useState","getData","App","productDetails","setProductDetails","filter","setFilter","category","brand","gender","filteredData","setFilteredData","count","setCount","loader","setLoader","failed","setFailed","getProductDetails","then","res","status","data","products","totalCount","catch","err","getFilters","Set","forEach","item","add","Array","from","filterData","type","console","log","map","index","product"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport getData from './Api'\n\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\n  const [ productDetails, setProductDetails ] = useState([])\n  const [ filter, setFilter ] = useState({ category: [], brand: [], gender: [] })\n  const [ filteredData, setFilteredData ] = useState([])\n  const [ count, setCount ] = useState(0)\n  const [ loader, setLoader ] = useState(false)\n  const [ failed, setFailed ] = useState(false)\n\n  const getProductDetails = () => {\n    setLoader(true)\n    getData().then((res) => {\n      if (res.status === 200) {\n        setProductDetails(res.data.products)\n        setCount(res.data.totalCount)\n        setLoader(false)\n        setFailed(false)\n      }\n      else {\n        setLoader(false)\n        setFailed(true)\n      }\n    }).catch((err) => {\n      setLoader(false)\n      setFailed(true)\n    })\n  }\n\n  const getFilters = () => {\n    let category = new Set()\n    let gender = new Set()\n    let brand = new Set()\n    productDetails.forEach((item) => {\n      category.add(item.category)\n      gender.add(item.gender)\n      brand.add(item.brand)\n    })\n\n    setFilter({ category: Array.from(category), gender: Array.from(gender), brand: Array.from(brand) })\n  }\n\n  useEffect(getProductDetails, [])\n  useEffect(getFilters, [ productDetails ])\n\n  const filterData = (filter, type) => {\n    setFilteredData(productDetails.filter(item => item[ type ] === filter))\n  }\n\n  console.log(filteredData)\n  return (\n    <div className=\"App\">\n      <h1>Category</h1>\n      {filter.category && filter.category.map((item, index) => (\n        <div key={`catergory${index}`} onClick={() => filterData(item, 'category')} >\n          {item}\n        </div>\n      ))\n      }\n      <h1>Gender</h1>\n      {filter.gender && filter.gender.map((item, index) => (\n        <div key={`gender${index}`} onClick={() => filterData(item, 'gender')}>\n          {item}\n        </div>\n      ))\n      }\n      <h1>Brand</h1>\n      {filter.brand && filter.brand.map((item, index) => (\n        <div key={`brand${index}`} onClick={() => filterData(item, 'brand')}>\n          {item}\n        </div>\n      ))\n      }\n\n\n      <div>\n        {\n          filteredData.map((item, index) => (\n            <div key={`${item.brand}${index}`}>\n              <div>{item.product}</div>\n              <div>{item.brand}</div>\n            </div>\n          ))\n\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}